                                План розробки аплікації CarService

Підключити базу даних

Вибрати базу даних (PostgreSQL).

        Налаштувати підключення до бази даних у файлі application.yaml.
        - Підключемо залежність для docker - spring-boot-docker-compose
        - створимо конфігураційний файл для докера в корні проєкту - compose.yaml
        - Додати залежності до pom.xml для PostgreSQL та Liquibase (ця залежність
        потребує налаштувань в application.yaml та окремого конфігураційного файлу
        db.changelog-master.yaml).

Створити сутність Car в пекеджі entity
        Створити Java-клас Car з полями id, model, enginePower, та потім додати нове поле torque.
        Створити міграцію для таблиці car

Налаштувати Liquibase для роботи з вашою базою даних.
        Створити файл changelog для Liquibase, щоб створити таблицю car з полями id, model, engine_power.
        Додати CarController з базовими CRUD операціями

Створити контролер CarController.
        Реалізувати CRUD-операції: GET /cars, GET /cars/{id}, POST /cars, PUT /cars/{id}, DELETE /cars/{id}.
        Реалізувати фільтрацію GET /cars за параметрами minEnginePower та maxEnginePower.
        Додати нову колонку torque

Оновити файл changelog Liquibase для додавання колонки torque в таблицю car.
Оновити клас Car, щоб відобразити цю зміну.

                                    Пояснення:
    Що таке міграція?
- Міграція (або changeSet) в контексті Liquibase - це набір інструкцій, які змінюють структуру бази даних. Це можуть бути створення нових таблиць, додавання колонок, зміна існуючих таблиць, тощо. Ці інструкції записуються в XML, YAML, JSON або SQL файлах і зберігаються у вигляді changelog (журналу змін).

